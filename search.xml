<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL基本介绍</title>
      <link href="posts/68d3.html"/>
      <url>posts/68d3.html</url>
      
        <content type="html"><![CDATA[<h3 id="数据库是什么"><a href="#数据库是什么" class="headerlink" title="数据库是什么"></a>数据库是什么</h3><p>据说，第二次世界大战后，美军为了有效管理大量的资料，便把所有的信息都集中在一个基地里，这个集中了所有信息的基地就称为数据库。“数据库”一词便由此诞生。</p><p>现在，<code>数据库表示“具有某种数据规则的集合”</code>。但提到数据库时，我们一般都默认它具备对数据进行<code>添加、查询和提取</code>等用于管理数据的功能。所以只是随便收集起来的数据的集合不能称为数据库。只有具备了<code>有效运用这些数据的管理功能</code>，才能称为数据库。</p><p>使用最广泛的数据库是<code>关系数据库</code>（Relational DataBase, RDB）。其中，一条数据称为记录（record），各个项目称为列（column）。</p><p><code>管理关系数据库的系统称为RDBMS</code>（Relational DataBase Management System）。MySQL也是RDBMS的一种。RDBMS是以IBM公司的埃德加·弗兰克·科德（Edgar F.Codd）与1970年发表的关系数据库相关论文为基础发展起来的。</p><h3 id="主流数据库"><a href="#主流数据库" class="headerlink" title="主流数据库"></a>主流数据库</h3><table><thead><tr><th>名称</th><th>特征</th></tr></thead><tbody><tr><td>Oracle</td><td>世界上最常用的商用RDBMS</td></tr><tr><td>Access</td><td>微软公司Office系列的RDBMS</td></tr><tr><td>Microsoft SQL Servier</td><td>微软公司的商用RDBMS</td></tr><tr><td>PostgreSQL</td><td>和MySQL一样是开源的RDBMS，在日本很受欢迎</td></tr><tr><td>MySQL</td><td>世界上最常用的开源RDBMS</td></tr></tbody></table><h3 id="MySQL新功能的添加历史"><a href="#MySQL新功能的添加历史" class="headerlink" title="MySQL新功能的添加历史"></a>MySQL新功能的添加历史</h3><table><thead><tr><th>功能</th><th>添加该功能时的MySQL版本</th></tr></thead><tbody><tr><td>事务</td><td>4.0（从版本3.23.38开始可以使用该功能）</td></tr><tr><td>合并</td><td>4.0</td></tr><tr><td>子查询</td><td>4.1</td></tr><tr><td>视图</td><td>5.0</td></tr><tr><td>存储过程</td><td>5.0</td></tr><tr><td>存储函数</td><td>5.0</td></tr><tr><td>触发器</td><td>5.0</td></tr><tr><td>默认存储引擎变为InnoDB</td><td>5.5</td></tr><tr><td>半同步复制</td><td>5.5</td></tr><tr><td>无损半同步复制</td><td>5.7</td></tr></tbody></table><h3 id="什么是SQL"><a href="#什么是SQL" class="headerlink" title="什么是SQL"></a>什么是SQL</h3><p>SQL原本是IBM公司开发的语言，但现在这门语言基本可以在所有的数据库上使用。不过麻烦的是，各个数据库使用的SQL语法稍有不同。</p><p>编写查询需要遵循SQL（Structured Query Language）的规则。SQL直译过来就是结构化查询语言，用于对数据库进行操作。<code>SQL是数据库的窗口，充当用户与数据库交互的媒介</code>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语学习第二天</title>
      <link href="posts/9511.html"/>
      <url>posts/9511.html</url>
      
        <content type="html"><![CDATA[<h3 id="为什么会有五种句型"><a href="#为什么会有五种句型" class="headerlink" title="为什么会有五种句型"></a>为什么会有五种句型</h3><p>这个句子有没有动词，没有动作就一般是主系表。如果有一个动作，我们把这个动作视为核心动词「谓语动词」。根据这个动词的种类不一样，这个动作涉及到别的对象呢，还是自己就能完成。涉及到别人是涉及到一个对象还是两个对象呢？这样子会划分为四种不同的类型。</p><p>定状语：状语增加动作的细节。定语增加名词的细节。动作是什么，怎么做出来的，在哪里做的，目的是什么。</p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>She bought a new bag.        <code>she</code> 主语    <code>bought</code> 谓语     <code>a new bag</code> 宾语；名词词组，冠词+形容词+名词=名词。</p><p>I am happy.         <code>i</code> 主语     <code>am</code> 连系动词     <code>happy</code> 表语</p><p>We love music.        <code>we</code> 主语     <code>love</code>谓语     <code>music</code> 宾语</p><p>We love swimming.         <code>we</code>主语     <code>love</code>谓语     <code>swimming</code>宾语</p><p>We love eating hotpot.         <code>we</code> 主语     <code>love</code>谓语     <code> eating hotpot</code>宾语（吃火锅视为一件事情）</p><p>He made me sad.         <code>He</code>主语     <code>made</code>谓语     <code>me</code>宾语    <code>sad</code>宾补</p><p>They invited me to dance.        <code>they</code>主语    <code>invited</code>谓语    <code>me</code>宾语    <code>to dance</code>宾补</p><p>My brother passed me the salt.    <code>my brother</code>主语    <code>passed</code>谓语    <code>me</code>宾语     <code>the salt</code>宾语</p><p>He sighed deeply.    <code>He</code> 主语    <code>sighed</code>谓语     <code>deeply</code>状语  叹气是不及物动词，涉及不到别人的动作。</p><p>He asked me to help him.    <code>He</code>主语    <code>asked</code>谓语    <code>me</code>宾语    <code>to help him</code>宾补</p><p>I worry about him.    <code>i</code>主语    <code>worry about</code>谓语    <code>him</code>宾语</p><p>He is looking at you.    <code>he</code>主语    <code>is looking at</code>谓语    <code>you</code>宾语</p><p>Playing basketball is my biggest time.    <code>playing basketball</code>主语    <code>is</code>系动词    <code>my biggest time</code>表语</p><p>He told me a joke.    <code>he</code>主语    <code>told</code>谓语    <code>me</code>宾语    <code>a joke</code>宾语</p><h3 id="主语"><a href="#主语" class="headerlink" title="主语"></a>主语</h3><p>动作的发出者，或者描述的对象。一般在开头。</p><ol><li>名词<ul><li>Pineapple is a kind of tropical fruit. <code>a kind of tropica</code>定语，意群。</li><li>Success requires persistence.</li><li>Monday is a workday.</li><li>A good night’s sleep is the best rest.</li></ul></li><li>代词</li><li>动名词</li><li>不定式</li><li>主语从句</li></ol><h3 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h3><ol><li>Hotpot  [ˈhɒtpɒt]    火锅</li><li>Invited  [ɪnˈvaɪtɪd]  邀请</li><li>Pepper [ˈpepər]  胡椒粉</li><li>Shaker  [ˈʃeɪkər] 振动器；混和器；调酒器</li><li>sighed  叹息</li><li>Pastime  [ˈpæstaɪm]  娱乐，消遣</li><li>Persistence   [pərˈsɪstəns]  坚持不懈；毅力 </li><li>Pineapple  [ˈpaɪnæpl]  菠萝</li><li>tropical  [ˈtrɑːpɪkl]  热带的</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 英语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语学习第一天</title>
      <link href="posts/56b.html"/>
      <url>posts/56b.html</url>
      
        <content type="html"><![CDATA[<h2 id="五种基本句型"><a href="#五种基本句型" class="headerlink" title="五种基本句型"></a>五种基本句型</h2><p>主语：动作的发起者，位于句首。</p><p>谓语：核心部分，一定是动词，紧跟在主语之后。</p><p>宾语：动作的承受者。</p><p>连续动词：不能组成一个完整的意思，没有实际意义，一般是be动词。</p><p>表语：对主语的修饰、描述。</p><p>宾语补语：对宾语的修饰、描述。</p><h3 id="主-连系动词-表语"><a href="#主-连系动词-表语" class="headerlink" title="主+连系动词+表语"></a>主+连系动词+表语</h3><ul><li>I am cold.</li><li>The food is delicious.</li><li>We are friends.</li><li>Make is a nice person.</li></ul><h3 id="主-谓"><a href="#主-谓" class="headerlink" title="主+谓"></a>主+谓</h3><ul><li>He died.</li><li>He smiled.</li><li>He cried.</li></ul><h3 id="主-谓-宾"><a href="#主-谓-宾" class="headerlink" title="主+谓+宾"></a>主+谓+宾</h3><ul><li>I visited him.</li><li>He killed a bear.</li><li>We love her.</li></ul><h3 id="主-谓-双宾"><a href="#主-谓-双宾" class="headerlink" title="主+谓+双宾"></a>主+谓+双宾</h3><ul><li>My father bought me a car.</li><li>Mary give me an apple.</li><li>He wrote her a letter.</li></ul><h3 id="主-谓-宾-宾语补语"><a href="#主-谓-宾-宾语补语" class="headerlink" title="主+谓+宾+宾语补语"></a>主+谓+宾+宾语补语</h3><ul><li>They named him Jamie.</li><li>She makes me laugh.</li><li>I painted the wall white.</li><li>She pushed the door open.</li><li>He asked me to call Tom.</li><li>I wish you to be happy.</li></ul><h2 id="人称代词"><a href="#人称代词" class="headerlink" title="人称代词"></a>人称代词</h2><h3 id="主格"><a href="#主格" class="headerlink" title="主格"></a>主格</h3><table><thead><tr><th></th><th>单数</th><th>复数</th></tr></thead><tbody><tr><td>第一人称</td><td>i</td><td>we</td></tr><tr><td>第二人称</td><td>you</td><td>you</td></tr><tr><td>第三人称</td><td>he/she/it</td><td>they</td></tr></tbody></table><h3 id="宾格"><a href="#宾格" class="headerlink" title="宾格"></a>宾格</h3><table><thead><tr><th></th><th>单数</th><th>复数</th></tr></thead><tbody><tr><td>第一人称</td><td>me</td><td>us</td></tr><tr><td>第二人称</td><td>you</td><td>you</td></tr><tr><td>第三人称</td><td>him/her/it</td><td>them</td></tr></tbody></table><h2 id="定语和状语"><a href="#定语和状语" class="headerlink" title="定语和状语"></a>定语和状语</h2><p>定语：对名词起修饰限定作用，主要是形容词。</p><ul><li>She is a beautiful girl.</li><li>She is a tall and thin server-year-old girl.</li></ul><p>状语：表示方式，程度，时间，地点，原因，目的…可以修饰动词，形容词和副词。</p><ul><li>He woke up at midnight.（时间状语）</li><li>Tim studied at home.（地点状语）</li><li>She talk loudy.（方式状语）</li><li>He walks in a funny way.</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 英语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Git之前需要做的最小配置</title>
      <link href="posts/5174.html"/>
      <url>posts/5174.html</url>
      
        <content type="html"><![CDATA[<h3 id="配置user-name-和-user-email"><a href="#配置user-name-和-user-email" class="headerlink" title="配置user.name 和 user.email"></a>配置user.name 和 user.email</h3><p>全局配置「对当前用户所有仓库有效」</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> config --global user.name <span class="token string">"your_name"</span>$ <span class="token function">git</span> config --global user.email <span class="token string">"your_email"</span></code></pre><p>缺省等同于local「只对某个仓库有效」</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> config --local user.name <span class="token string">"your_name"</span>$ <span class="token function">git</span> config --local user.email <span class="token string">"your_email"</span></code></pre><p>系统配置「对系统所有登录的用户有效」</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> config --system user.name <span class="token string">"your_name"</span>$ <span class="token function">git</span> config --system user.email <span class="token string">"your_email"</span></code></pre><h3 id="显示config的配置"><a href="#显示config的配置" class="headerlink" title="显示config的配置"></a>显示config的配置</h3><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> config --list --local$ <span class="token function">git</span> config --list --global$ <span class="token function">git</span> config --list --system</code></pre><h3 id="查看某一个属性"><a href="#查看某一个属性" class="headerlink" title="查看某一个属性"></a>查看某一个属性</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name</code></pre><h3 id="移除设置"><a href="#移除设置" class="headerlink" title="移除设置"></a>移除设置</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --unset --global user.email</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 项目管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="posts/3eeb.html"/>
      <url>posts/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
